{"version":3,"sources":["G:/Dashboard/update/sp-project/src/app/planner/measure/measure.css","G:/Dashboard/update/sp-project/src/app/planner/measure/measure.html","G:/Dashboard/update/sp-project/src/app/planner/measure/measure.module.ts","G:/Dashboard/update/sp-project/src/app/planner/measure/measure.ts","G:/Dashboard/update/sp-project/src/app/planner/measure/tree-view.ts"],"names":[],"mappings":"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","file":"measure.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".department-hierarchy{\\r\\n  overflow: scroll;\\r\\n  height: 300px;\\r\\n}\\r\\n.p-3 {\\r\\n  -webkit-box-flex: 6 !important;\\r\\n      -ms-flex: 6 !important;\\r\\n          flex: 6 !important;\\r\\n}\\r\\n.p-3o{\\r\\n  -webkit-box-flex:2;\\r\\n      -ms-flex:2;\\r\\n          flex:2;\\r\\n}\\r\\n\\r\\n.table{\\r\\n  margin-bottom: 0px;\\r\\n }\\r\\n .table .table {\\r\\n  background-color: inherit;\\r\\n }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Dashboard/update/sp-project/src/app/planner/measure/measure.css\n// module id = ../../../../../src/app/planner/measure/measure.css\n// module chunks = measure.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"text-center\\\" style=\\\"color: red;\\\"><h1>Operational KPIs</h1></div>      \\r\\n  <div class=\\\"panel\\\">\\r\\n    <div class=\\\"panel-heading background-3\\\">\\r\\n      <h4 class=\\\"panel-title\\\">\\r\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#collapse1\\\" class=\\\"accordion-toggle\\\">Add measures</a>\\r\\n      </h4>\\r\\n    </div>\\r\\n    <div id=\\\"collapse1\\\" class=\\\"panel-collapse collapse\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <form [formGroup]=\\\"measureForm\\\" (submit)=\\\"submitMeasure()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"year\\\">Plan Year:</label>\\r\\n                <select id=\\\"year\\\" name=\\\"year\\\" class=\\\"form-control\\\" formControlName=\\\"cycleId\\\" [ngModel]=\\\"defaultCycle\\\" (ngModelChange)=\\\"getObjective($event)\\\" >\\r\\n                    <option *ngFor=\\\"let c of cycles;let y = index;\\\" [value]=\\\"c.cycleId\\\">{{c.planYear}}: [{{c.startYear}} To {{c.endYear}}] : {{c.description}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Select Goal:</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"sel1\\\" formControlName=\\\"objectiveId\\\" (ngModelChange)=\\\"getInitiative($event)\\\" >\\r\\n                <option *ngFor=\\\"let objective of objectives;let i=index;\\\" [value]=\\\"objective.goalId\\\">{{i+1}}.{{objective.goal}}</option>\\r\\n              </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Select Initiative:</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"sel1\\\" formControlName=\\\"initiativeId\\\" (ngModelChange)=\\\"getActivities($event)\\\" >\\r\\n                <option *ngFor=\\\"let initiative of initiatives;let j=index;\\\" [value]=\\\"initiative.initiativeId\\\">{{j+1}}.{{initiative.initiative}}</option>\\r\\n              </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Select Activity:</label>\\r\\n                <select class=\\\"form-control\\\" id=\\\"sel1\\\" formControlName=\\\"activityId\\\" >\\r\\n                <option *ngFor=\\\"let activity of activities;let k=index;\\\" [value]=\\\"activity.activityId\\\">{{k+1}}.{{activity.activity}}</option>\\r\\n              </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Operational KPI</label>\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"opi\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Select MeasureUnit</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"measureUnit\\\">\\r\\n                <option value=\\\"\\\" disabled selected>Choose Measurement Unit</option>\\r\\n                <option value=\\\"percentage\\\">Percent</option>\\r\\n                <option value=\\\"number\\\">Decimal</option>\\r\\n                <option value=\\\"rate\\\">Rate</option>\\r\\n              </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Select Direction</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"direction\\\">\\r\\n                <option value=\\\"\\\" disabled selected>Choose Direction of measureUnit</option>\\r\\n                <option value=\\\"true\\\">Positive</option>\\r\\n                <option value=\\\"false\\\">Negative</option>\\r\\n              </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Frequency of Measurement</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"frequencyId\\\">\\r\\n                  <option value=\\\"1\\\">Annually</option>\\r\\n                  <option value=\\\"2\\\">Semi-Annual</option>      \\r\\n                  <option value=\\\"3\\\">Quarterly</option> \\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Evidence Forms</label>\\r\\n                <select class=\\\"form-control\\\" formControlName=\\\"evidanceFormId\\\">\\r\\n                <option value=\\\"1\\\" *ngFor=\\\"let form of evidenceForms;let f = index;\\\" [value]=\\\"form.formId\\\">{{form.form}}</option>\\r\\n              </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Remarks</label>\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"remarks\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label>Help Text</label>\\r\\n                <textarea class=\\\"form-control\\\" rows=\\\"3\\\" formControlName=\\\"helpText\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-xs-12 col-sm-12 form-check\\\">\\r\\n              <label class=\\\"form-check-label\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"approvalRequired\\\" ><span style=\\\"color:red;\\\">*</span>\\r\\n                Approval Required\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"measureForm.invalid\\\">Submit</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"panel\\\">\\r\\n    <div class=\\\"panel-heading background-4\\\">\\r\\n      <h4 class=\\\"panel-title\\\">\\r\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#collapse2\\\">Proposed Operational Performance Indicators</a>\\r\\n        <button type=\\\"button\\\" class=\\\"btn-info pull-right\\\" (click)=\\\"addNewMeasure()\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-plus\\\"></span> Add\\r\\n        </button>\\r\\n      </h4>\\r\\n    </div>\\r\\n    <div id=\\\"collapse2\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <table class=\\\"table table-bordered\\\">\\r\\n          <caption class=\\\"form-inline\\\">\\r\\n            <div class=\\\"form-group pull-right\\\">\\r\\n              <label class=\\\"control-label\\\">Strategic Plan</label>\\r\\n              <select id=\\\"year\\\" name=\\\"year\\\" class=\\\"form-control\\\" [ngModel]=\\\"defaultCycle\\\" (ngModelChange)=\\\"getMeasure()\\\"\\r\\n                style=\\\"width:auto;height: auto;padding: 0px;\\\">\\r\\n                <option *ngFor=\\\"let c of cycles;let y = index;\\\" [value]=\\\"c.cycleId\\\" [attr.selected]=\\\"c.defaultCycle\\\">{{c.planYear}} : [{{c.startYear}} To {{c.endYear}}]</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </caption>\\r\\n          <colgroup>\\r\\n            <col style=\\\"width:15%\\\">\\r\\n            <col style=\\\"width:15%\\\">\\r\\n            <col style=\\\"width:15%\\\">\\r\\n            <col style=\\\"width:55%\\\">\\r\\n          </colgroup>\\r\\n          <thead  class=\\\"header-background\\\" *ngIf=\\\"goalsCopy.length\\\">\\r\\n            <tr>\\r\\n              <th>Goal\\r\\n                <span class=\\\"search\\\">\\r\\n                  <input type=\\\"text\\\" name=\\\"search\\\" (keyup)=\\\"searchGoal($event)\\\" placeholder=\\\"Search..\\\">\\r\\n                </span>\\r\\n              </th>\\r\\n              <th>Initiative\\r\\n                <span class=\\\"search\\\">\\r\\n                  <input type=\\\"text\\\" name=\\\"search\\\" (keyup)=\\\"searchInitiative($event)\\\" placeholder=\\\"Search..\\\">\\r\\n                </span>\\r\\n              </th>\\r\\n              <th>Activity\\r\\n                <span class=\\\"search\\\">\\r\\n                  <input type=\\\"text\\\" name=\\\"search\\\" (keyup)=\\\"searchActivity($event)\\\" placeholder=\\\"Search..\\\">\\r\\n                </span>\\r\\n              </th>\\r\\n              <th>\\r\\n                  KPI\\r\\n                  <span class=\\\"search\\\">\\r\\n                    <input type=\\\"text\\\" name=\\\"search\\\" (keyup)=\\\"searchOpi($event)\\\" placeholder=\\\"Search..\\\">\\r\\n                  </span>\\r\\n              </th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let goal of goals;let i = index;\\\">\\r\\n              <td>{{goal.goal}}</td>\\r\\n              <td colspan=\\\"8\\\" style=\\\"padding:0px;border:none;\\\" #element [style.height]=\\\"get(element)\\\">\\r\\n                <table class=\\\"table table-bordered\\\" style=\\\"height: inherit;\\\">\\r\\n                  <colgroup>\\r\\n                    <col style=\\\"width:17.60%\\\">\\r\\n                    <col style=\\\"width:82.40%\\\">\\r\\n                  </colgroup>\\r\\n                  <tr *ngFor=\\\"let initiate of goal.initiatives;let j=index;\\\">\\r\\n                    <td>{{initiate.initiative}}</td>\\r\\n                    <td colspan=\\\"7\\\" style=\\\"padding:0px;\\\" #element1 [style.height]=\\\"get(element1)\\\">\\r\\n                      <table class=\\\"table table-bordered\\\" style=\\\"height: inherit;\\\">\\r\\n                        <colgroup>\\r\\n                          <col style=\\\"width:21.40%\\\">\\r\\n                          <col style=\\\"width:78.60%\\\">\\r\\n                        </colgroup>\\r\\n                        <tr *ngFor=\\\"let activit of initiate.activities;let k=index;\\\">\\r\\n                          <td [style.border-top]=\\\"k?'1px solid #ddd':'none'\\\">{{activit.activity}}</td>\\r\\n                          <td style=\\\"padding:0px;\\\" #element2 [style.height]=\\\"get(element2)\\\">\\r\\n                            <table class=\\\"table table-bordered\\\" style=\\\"height: inherit;\\\">\\r\\n                              <colgroup>\\r\\n                                <col style=\\\"width:35%\\\">\\r\\n                                <col style=\\\"width:20%\\\">\\r\\n                                <col style=\\\"width:20%\\\">\\r\\n                                <col style=\\\"width:5%\\\">\\r\\n                                <col style=\\\"width:5%\\\">\\r\\n                                <col style=\\\"width:10%\\\">\\r\\n                              </colgroup>\\r\\n                              <tr *ngFor=\\\"let msr of activit.opis;let l=index\\\">\\r\\n                                <td [style.border-top]=\\\"l?'1px solid #ddd':'none'\\\">{{msr.opi}}</td>\\r\\n                                <td>\\r\\n                                  <label>Frequency :</label>{{msr.frequency}}<br>\\r\\n                                  <label>Cost :</label>10000<br>\\r\\n                                  <label>MeasureUnit :</label>{{msr.measureUnit}}<br>\\r\\n                                  <label>Direction :</label>{{direction[msr.direction]}}<br>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                  <ul style=\\\"list-style:none;padding:0px;\\\"><b>Assigned Departments</b>\\r\\n                                    <li *ngFor=\\\"let dept of msr.assignedDepartments;let d = index\\\">{{dept.department}}, </li>\\r\\n                                  </ul>\\r\\n                                  <span *ngIf=\\\"!msr.assignedDepartments.length\\\">None</span>\\r\\n                                </td>\\r\\n                                <td [style.border-top]=\\\"l?'1px solid #ddd':'none'\\\">\\r\\n                                  <a (click)=\\\"updateMeasure(goal,initiate,activit,msr)\\\" href=\\\"#collapse1\\\">\\r\\n                                    <i class=\\\"glyphicon glyphicon-edit\\\" style=\\\"cursor:pointer;\\\"></i>\\r\\n                                  </a>\\r\\n                                </td>\\r\\n                                <td [style.border-top]=\\\"l?'1px solid #ddd':'none'\\\">\\r\\n                                  <i style=\\\"cursor:pointer;\\\" class=\\\"glyphicon glyphicon-remove\\\" (click)=\\\"deleteMeasure(msr.opiId,activit.opis,l)\\\"></i>\\r\\n                                </td>\\r\\n                                <td [style.border-top]=\\\"l?'1px solid #ddd':'none'\\\">\\r\\n                                  <a data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click)=\\\"selectedMeasure=msr;next=false;prev=true;checkAssignDept(msr.assignedDepartments);\\\">Assign</a>\\r\\n                                </td>\\r\\n                              </tr>\\r\\n                            </table>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </table>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </table>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n          <tfoot *ngIf=\\\"!goals.length\\\">\\r\\n            <tr><td colspan=\\\"4\\\" class=\\\"text-center\\\">No Data to Display .,.</td></tr>\\r\\n          </tfoot>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Set targets</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\" *ngIf=\\\"selectedMeasure\\\">\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"prev\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"radio\\\">\\r\\n              <label>\\r\\n                <input type=\\\"radio\\\" name=\\\"optradio\\\"> All(Institutional Units)</label>\\r\\n            </div>\\r\\n            <div class=\\\"radio\\\">\\r\\n              <label>\\r\\n                <input type=\\\"radio\\\" name=\\\"optradio\\\">Select</label>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <div class=\\\"department-hierarchy\\\">\\r\\n              <b>Organisation Unit</b>\\r\\n              <tree-view id=\\\"termSheetPopup\\\" [treeData]=\\\"departments\\\" [assignedDepartment]=\\\"selectedMeasure.assignedDepartments\\\" (onSelected)=\\\"department($event)\\\"></tree-view>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"next\\\" style=\\\"margin: 15px 15px;\\\">\\r\\n          <form [formGroup]=\\\"departmentForm\\\">\\r\\n            <ul formArrayName=\\\"departmentsArray\\\" style=\\\"list-style:none;padding-left: 0;\\\">\\r\\n              <b>Selected Departments</b>\\r\\n              <li *ngIf=\\\"!selectedDepartments\\\">None Selected</li>\\r\\n              <li *ngFor=\\\"let dept of departmentForm.controls.departmentsArray.controls;let arr=index;\\\" [formGroupName]=\\\"arr\\\">\\r\\n                <table class=\\\"table\\\">\\r\\n                  <caption style=\\\"text-align: left;\\\">{{dept.value.departmentName}}\\r\\n                    <span class=\\\"input-group pull-right\\\">\\r\\n                      <div class=\\\"input-group-addon\\\">BaseLine</div>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"baseline\\\" style=\\\"width:25%\\\" id=\\\"exampleInputAmount\\\">\\r\\n                    </span>\\r\\n                  </caption>\\r\\n                  <ng-container formArrayName=\\\"opiAnnualTargets\\\">\\r\\n                    <tr *ngFor=\\\"let array of dept.controls.opiAnnualTargets.controls;let op=index;\\\" [formGroupName]=\\\"op\\\">\\r\\n                      <td>{{array.value.year}}</td>\\r\\n                      <ng-container formArrayName=\\\"levels\\\">\\r\\n                        <td *ngFor=\\\"let level of array.controls.levels.controls;let l = index;\\\" [formGroupName]=\\\"l\\\">\\r\\n                          <div class=\\\"input-group\\\">\\r\\n                            <div class=\\\"input-group-addon\\\">Q{{level.value.quarterId}}</div>\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleInputAmount\\\" style=\\\"width: 50%;\\\" formControlName=\\\"estimatedTargetLevel\\\">\\r\\n                          </div>\\r\\n                        </td>\\r\\n                      </ng-container>\\r\\n                      <td>\\r\\n                        <div class=\\\"input-group\\\">\\r\\n                          <div class=\\\"input-group-addon\\\">Estimated Cost</div>\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"estimatedCost\\\" style=\\\"width:50%\\\" id=\\\"exampleInputAmount\\\">\\r\\n                        </div>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                </table>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"next\\\" (click)=\\\"prev = true;next = false;\\\">Prev</button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"next\\\" (click)=\\\"assign()\\\">Save</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"prev\\\" (click)=\\\"prev=false;next=true;assignDepartment()\\\">Next</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--popup model-->\\r\\n<div class=\\\"modal fade\\\" id=\\\"measureModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Confirm</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>You have successfully added a new Measure.</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapse1\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Dashboard/update/sp-project/src/app/planner/measure/measure.html\n// module id = ../../../../../src/app/planner/measure/measure.html\n// module chunks = measure.module","import { NgModule } from '@angular/core';\r\nimport { MeasureComponent } from './measure';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from \"../../shared/shared.module\";\r\nimport {TreeView} from \"./tree-view\";\r\n\r\n@NgModule({\r\n\timports: [SharedModule,RouterModule.forChild([{\r\n\t path: '', component: MeasureComponent,\r\n\t pathMatch: 'full' \r\n\t }])],\r\n\tproviders:[],\r\n\tdeclarations : [MeasureComponent,TreeView],\r\n\t// exports: [RouterModule]\r\n})\r\nexport class MeasureModule{\r\n}\n\n\n// WEBPACK FOOTER //\n// G:/Dashboard/update/sp-project/src/app/planner/measure/measure.module.ts","import { Component, AfterViewInit } from '@angular/core';\r\nimport { UniversityService } from \"../../shared/UTI.service\";\r\nimport { FormBuilder, Validators, FormGroup, FormArray } from \"@angular/forms\";\r\nimport { StorageService } from \"../../shared/storage.service\";\r\nimport { TreeView } from \"./tree-view\";\r\nimport { Filters } from '../../shared/filters';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'measure',\r\n  templateUrl: './measure.html',\r\n  styleUrls: ['./measure.css', './../planner.component.css']\r\n})\r\nexport class MeasureComponent extends Filters implements AfterViewInit {\r\n  defaultCycle: any;\r\n  objectives: any[] = [];\r\n  initiatives: any[] = [];\r\n  activities: any[] = [];\r\n  public departments: any[] = [];\r\n  departmentsCopy: any[] = [];\r\n  evidenceForms: any[] = [];\r\n  public isUpdating: boolean = false;\r\n  public cycles: any[] = [];\r\n\r\n  public direction: any = {\r\n    true: 'Upward',\r\n    false: 'Downward'\r\n  }\r\n\r\n  prev: boolean = true;\r\n  next: boolean = false;\r\n\r\n  public quarter: any[] = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\r\n  public quarters: any[] = [\r\n    {\r\n      \"id\": 1,\r\n      \"endDate\": \"31/03/\",\r\n      \"startDate\": \"01/01/\",\r\n      \"quarter\": \"q1\"\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"endDate\": \"31/06/\",\r\n      \"startDate\": \"01/04/\",\r\n      \"quarter\": \"q2\"\r\n    },\r\n    {\r\n      \"id\": 3,\r\n      \"endDate\": \"31/09/\",\r\n      \"startDate\": \"01/07/\",\r\n      \"quarter\": \"q3\"\r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"endDate\": \"31/12/\",\r\n      \"startDate\": \"01/10/\",\r\n      \"quarter\": \"q4\"\r\n    }\r\n  ];\r\n  public measureForm: FormGroup;\r\n  selectedQuarter: any = 0;\r\n  constructor(public orgService: UniversityService,\r\n    public formBuilder: FormBuilder, public commonService: StorageService) {\r\n    super();\r\n    this.measureForm = this.setMeasure();\r\n\r\n    this.orgService.getCycleWithChildren().subscribe((response: any) => {\r\n      this.cycles = response;\r\n      this.cycles.forEach(element => {\r\n        if (element.defaultCycle)\r\n          this.defaultCycle = element.cycleId;\r\n      });\r\n      this.getMeasure();\r\n      this.getEvidenceForms()\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.getQuarter();\r\n    this.getDepartments();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    $(document).ready(function () {\r\n      $('[data-toggle=\"tooltip\"]').tooltip();\r\n    });\r\n    // $(\"#myModal\").on('hidden.bs.modal', function (e: any) {\r\n    //   $(this).find(\"input[type=checkbox], input[type=radio]\")\r\n    //     .prop(\"checked\", \"\")\r\n    //     .end();\r\n\r\n    // });\r\n\r\n  }\r\n\r\n  getObjective(cycleId: any) {\r\n    this.cycles.forEach(element => {\r\n      if (element.cycleId == cycleId) {\r\n        this.objectives = element.goals;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  emptySearchResult: any;\r\n\r\n  getInitiative(objId: any) {\r\n    if (objId) {\r\n      this.objectives.forEach((element: any) => {\r\n        if (element.goalId == objId) {\r\n          this.initiatives = element.initiatives;\r\n          return;\r\n        }\r\n      });\r\n    } else {\r\n      this.objectives = [];\r\n    }\r\n  }\r\n\r\n  getActivities(initId: any) {\r\n    if (initId) {\r\n      this.initiatives.forEach((element: any) => {\r\n        if (element.initiativeId == initId) {\r\n          this.activities = element.activities;\r\n          return;\r\n        }\r\n      });\r\n    } else {\r\n      this.objectives = [];\r\n    }\r\n  }\r\n\r\n  getMeasure() {\r\n    this.orgService.getMeasuresByCycleId(this.defaultCycle).subscribe((response: any) => {\r\n      if (response.status == 204) {\r\n        this.goals = [];\r\n        this.goalsCopy = [];\r\n      } else {\r\n        this.goals = response;\r\n        this.goalsCopy = response;\r\n        this.filteredActivities = response;\r\n        this.filteredGoals = response;\r\n        this.filteredInitiatives = response;\r\n        this.filteredOpis = response;\r\n      }\r\n    })\r\n  }\r\n\r\n  getQuarter() {\r\n    this.orgService.getQuarter().subscribe((res: any) => {\r\n      this.quarters = res;\r\n    })\r\n  }\r\n\r\n  getDepartments() {\r\n    // this.departmentIds = [];\r\n    this.orgService.getDepartments().subscribe((res: any) => {\r\n      this.departments = res;\r\n      this.departmentsCopy = res;\r\n    })\r\n  }\r\n  public selectedMeasureId: any;\r\n  // assignDepartment() {\r\n  //   this.orgService.assignMeasure(this.selectedMeasureId, this.departmentIds).subscribe((res: any) => {\r\n  //     this.getMeasure();\r\n  //     $('#myModal').modal('hide');\r\n  //   })\r\n  // }\r\n\r\n  // public departmentIds: any[] = [];\r\n  public selectedDepartments: any[] = [];\r\n  public department(event: any) {\r\n    this.travers(event, event.my);\r\n  }\r\n\r\n  checkAssignDept(assignedDepartments: any[]) {\r\n    this.selectedDepartments = [];\r\n    this.departments = JSON.parse(JSON.stringify(this.departmentsCopy));\r\n    assignedDepartments.forEach(outerElement => {\r\n      this.departments.forEach(innerElement => {\r\n        this.searchDepartment(innerElement, outerElement);\r\n      });\r\n    });\r\n  }\r\n\r\n  searchDepartment(department: any, assigneddepartment: any) {\r\n    if (!department) {\r\n      return;\r\n    } else {\r\n      if (department.departmentId == assigneddepartment.departmentId) {\r\n        department.baseline = assigneddepartment.baseline;\r\n        department.opiAnnualTargets = assigneddepartment.opiAnnualTargets;\r\n        department.my = true;\r\n        department.isUpdating = true;\r\n        console.log(department);\r\n        this.selectedDepartments.push(department);\r\n      } else {\r\n        if (department.reporteeDepartments)\r\n          department.reporteeDepartments.forEach((element: any) => {\r\n            this.searchDepartment(element, assigneddepartment);\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  travers(department: any, checked: boolean) {\r\n    if (!department) {\r\n      return;\r\n    } else {\r\n      if (checked) {\r\n        department.my = true;\r\n        this.selectedDepartments.push(department);\r\n      } else {\r\n        department.my = false;\r\n        this.selectedDepartments.splice(this.selectedDepartments.indexOf(department), 1);\r\n      }\r\n      if (department.reporteeDepartments)\r\n        department.reporteeDepartments.forEach((element: any) => {\r\n          this.travers(element, checked);\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  departmentForm: FormGroup;\r\n  cycle: any[];\r\n  assignDepartment() {\r\n    this.cycles.forEach(element => {\r\n      if (this.defaultCycle == element.cycleId)\r\n        this.cycle = element.cycle;\r\n    });\r\n    this.departmentForm = this.formBuilder.group({\r\n      departmentsArray: this.formBuilder.array(this.getDepartmentFormArray())\r\n    });\r\n  }\r\n\r\n  assign() {\r\n    var departmentsArray: any[] = this.departmentForm.controls[\"departmentsArray\"].value;\r\n    departmentsArray.forEach(element => {\r\n      delete element[\"departmentName\"];\r\n    });\r\n    if (confirm(\"Do you really want to assign this OPI\"))\r\n      this.orgService.assignOpi(this.selectedMeasure.opiId, departmentsArray).subscribe((response: any) => {\r\n        departmentsArray.forEach(element => {\r\n          this.selectedMeasure.assignedDepartments.push(departmentsArray);\r\n        });\r\n        $('#myModal').modal('hide');\r\n      })\r\n  }\r\n\r\n\r\n  getDepartmentFormArray() {\r\n    const departmentsFormArray: any[] = [];\r\n    this.selectedDepartments.forEach(element => {\r\n      departmentsFormArray.push(this.formBuilder.group({\r\n        baseline: [element.baseline],\r\n        departmentId: [element.departmentId],\r\n        departmentName: [element.department],\r\n        opiAnnualTargets: this.formBuilder.array(this.setAnnualTarget(element.opiAnnualTargets))\r\n      }))\r\n    });\r\n    return departmentsFormArray;\r\n  }\r\n  setAnnualTarget(opiAnnualTargets: any) {\r\n    const annualTarget: any[] = [];\r\n    if (opiAnnualTargets)\r\n      opiAnnualTargets.forEach((element: any) => {\r\n        annualTarget.push(this.inItTargetWithLevels(element))\r\n      });\r\n    else\r\n      this.cycle.forEach((element: any) => {\r\n        annualTarget.push(this.inItTargetIn(element));\r\n      });\r\n    return annualTarget;\r\n  }\r\n\r\n  inItTargetIn(year: any) {\r\n    return this.formBuilder.group({\r\n      \"year\": [year, [Validators.required]],\r\n      \"levels\": this.formBuilder.array(this.setLevels(this.selectedMeasure.frequencyId)),\r\n      \"estimatedCost\": ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  inItTargetWithLevels(annualTarget: any) {\r\n    return this.formBuilder.group({\r\n      \"year\": [annualTarget.year, [Validators.required]],\r\n      \"levels\": this.formBuilder.array(this.setLevelsWithValue(annualTarget.levels)),\r\n      \"estimatedCost\": [annualTarget.estimatedCost, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  setLevelsWithValue(levels: any[]) {\r\n    const quarterLevel: any[] = [];\r\n    levels.forEach(element => {\r\n      quarterLevel.push(this.formBuilder.group({\r\n        quarterId: element.quarterId,\r\n        estimatedTargetLevel: element.estimatedTargetLevel\r\n      }))\r\n    });\r\n    return quarterLevel;\r\n  }\r\n\r\n  setLevels(count: any) {\r\n    const levels: any[] = [];\r\n    if (count == 3) count++;\r\n    for (var i = 0; i < count; i++) {\r\n      if (count == 2)\r\n        levels.push(this.getLevel(2 * i + 1));\r\n      else if (count == 1)\r\n        levels.push(this.getLevel(3));\r\n      else\r\n        levels.push(this.getLevel(i));\r\n    }\r\n    return levels;\r\n  }\r\n\r\n  getLevel(q: any) {\r\n    return this.formBuilder.group({\r\n      quarterId: this.quarters[q].id,\r\n      estimatedTargetLevel: [0]\r\n    });\r\n  }\r\n\r\n\r\n  setMeasure() {\r\n    return this.formBuilder.group({\r\n      \"cycleId\": [{ value: this.defaultCycle, disabled: false }, [Validators.required]],\r\n      \"objectiveId\": [{ value: '', disabled: false }, [Validators.required]],\r\n      \"initiativeId\": [{ value: '', disabled: false }, [Validators.required]],\r\n      \"activityId\": [{ value: '', disabled: false }, [Validators.required]],\r\n      \"opi\": ['', [Validators.required]],\r\n      \"frequencyId\": [1, [Validators.required]],\r\n      \"measureUnit\": ['', [Validators.required]],\r\n      \"evidanceFormId\": ['', []],\r\n      \"direction\": [false, [Validators.required]],\r\n      \"approvalRequired\": [false, [Validators.required]],\r\n      \"remarks\": ['', [Validators.required]],\r\n      \"helpText\": ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  submitMeasure() {\r\n    var formChanges: any = {};\r\n    var msg: string = \"\";\r\n    delete this.measureForm.value[\"cycleId\"]\r\n    delete this.measureForm.value[\"objectiveId\"];\r\n    delete this.measureForm.value[\"initiativeId\"];\r\n    if (!this.isUpdating) {\r\n      this.orgService.saveMeasure(this.measureForm.value).subscribe((response: any) => {\r\n        this.getMeasure();\r\n        $('#measureModal').modal('show');\r\n        this.measureForm.reset({\r\n          opi: '',\r\n          measureUnit: '', frequencyId: 1, baseline: '', direction: '', remarks: '', helpText: '', approvalRequired: ''\r\n        });\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    } else {\r\n      Object.keys(this.measureForm.value).forEach((key: any) => {\r\n        if (this.selectedMeasure[key] != this.measureForm.value[key]) {\r\n          formChanges[key] = this.measureForm.value[key];\r\n          msg += \"\\n\" + key + \" = \" + formChanges[key] + \",\";\r\n        }\r\n      });\r\n      if (confirm(\"Are you sure you want to update this OPI as \" + msg)) {\r\n        delete this.measureForm.value[\"activityId\"];\r\n        this.orgService.updateMeasure(this.selectedMeasure.opiId, formChanges).subscribe((response: any) => {\r\n          this.measureForm = this.setMeasure();\r\n          this.getMeasure();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  selectedMeasure: any;\r\n\r\n  updateMeasure(objective: any, initiative: any, activity: any, measure: any) {\r\n    this.measureForm.controls[\"cycleId\"].disable();\r\n    this.measureForm.controls[\"objectiveId\"].disable();\r\n    this.measureForm.controls[\"initiativeId\"].disable();\r\n    this.measureForm.controls[\"activityId\"].disable();\r\n    this.isUpdating = true;\r\n    this.selectedMeasure = measure;\r\n    this.measureForm.patchValue({\r\n      cycleId: this.defaultCycle,\r\n      objectiveId: objective.goalId,\r\n      initiativeId: initiative.initiativeId,\r\n      activityId: activity.activityId,\r\n      opi: measure.opi,\r\n      measureUnit: measure.measureUnit,\r\n      frequencyId: measure.frequencyId,\r\n      baseline: measure.baselineOfOpi,\r\n      evidanceFormId: measure.evidanceFormId,\r\n      direction: measure.direction,\r\n      remarks: measure.remarks,\r\n      helpText: measure.helpText,\r\n      approvalRequired: measure.approvalRequired\r\n    });\r\n    $('#collapse1').collapse('show');\r\n    // this.measureForm.controls[\"annualTarget\"].patchValue(measure.annualTarget);\r\n  }\r\n\r\n  enableFields() {\r\n    this.measureForm.controls[\"cycleId\"].enable();\r\n    this.measureForm.controls[\"objectiveId\"].enable();\r\n    this.measureForm.controls[\"initiativeId\"].enable();\r\n    this.measureForm.controls[\"activityId\"].enable();\r\n    this.measureForm = this.setMeasure();\r\n  }\r\n\r\n  nextForm() {\r\n\r\n  }\r\n\r\n  deleteMeasure(measureId: any, measures: any[], index: any) {\r\n    if (confirm(\"Are you sure you want to delete this Measure?\"))\r\n      this.orgService.deleteMeasure(measureId).subscribe((res: any) => {\r\n        console.log(res);\r\n        // measures.splice(index, 1);\r\n        this.getMeasure();\r\n      })\r\n  }\r\n\r\n  getEvidenceForms() {\r\n    this.orgService.getEvidenceForms().subscribe((response: any) => {\r\n      this.evidenceForms = response;\r\n    })\r\n  }\r\n\r\n  addNewMeasure() {\r\n    this.enableFields();\r\n    this.isUpdating = false;\r\n    $(\"#collapse1\").collapse('show');\r\n    this.measureForm = this.setMeasure();\r\n  }\r\n\r\n  get(e) {\r\n    var promise = new Promise((resolve: any, reject: any) => { $(e)[\"0\"].height = $(e)[\"0\"].clientHeight; resolve(); });\r\n    return promise;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// G:/Dashboard/update/sp-project/src/app/planner/measure/measure.ts","import { Component, Input, EventEmitter, Output, AfterViewInit } from '@angular/core';\r\n\r\n@Component ({\r\n  selector: 'tree-view',\r\n  template: `\r\n  <ul style=\"list-style:none;\">\r\n    <li *ngFor=\"let node of treeData;let i=index;\">\r\n      <div class=\"checkbox\">\r\n        <label><input type=\"checkbox\" [(ngModel)]=\"node.my\" (change)=\"department(node)\">{{node.department}}</label>\r\n      </div>      \r\n      <tree-view [assignedDepartment]=\"assignedDepartment\" [treeData]=\"node.reporteeDepartments\" (onSelected)=\"department($event)\"></tree-view>\r\n    </li>\r\n  </ul>\r\n  `\r\n})\r\nexport class TreeView implements AfterViewInit{\r\n\r\n  @Input() treeData: any[];\r\n  @Input() assignedDepartment:any[];\r\n  @Output() onSelected : EventEmitter<any> = new EventEmitter<boolean>();\r\n  constructor(){\r\n    \r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    \r\n  }\r\n\r\n  department(event: any) {\r\n    this.onSelected.emit(event);\r\n  }\r\n  \r\n}\n\n\n// WEBPACK FOOTER //\n// G:/Dashboard/update/sp-project/src/app/planner/measure/tree-view.ts"],"sourceRoot":"webpack:///"}