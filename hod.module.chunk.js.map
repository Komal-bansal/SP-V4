{"version":3,"sources":["G:/Dashboard/update/sp-project/src/app/hod/hod.component.css","G:/Dashboard/update/sp-project/src/app/hod/hod.component.html","G:/Dashboard/update/sp-project/src/app/hod/hod.component.ts","G:/Dashboard/update/sp-project/src/app/hod/hod.module.ts","G:/Dashboard/update/sp-project/src/app/hod/hod.service.ts"],"names":[],"mappings":"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","file":"hod.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".table{\\r\\n margin-bottom: 0px;\\r\\n}\\r\\n.table .table {\\r\\n background-color: inherit;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Dashboard/update/sp-project/src/app/hod/hod.component.css\n// module id = ../../../../../src/app/hod/hod.component.css\n// module chunks = hod.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n  <nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n        <li><a routerLink=\\\"/login\\\" (click)=\\\"logout()\\\">Logout</a></li>      \\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n  <div class=\\\"text-center\\\" style=\\\"color: red;\\\">\\r\\n    <h1>\\r\\n      <b>Assigned Operational Performance Indicators</b>\\r\\n    </h1>\\r\\n  </div>\\r\\n  <!--edit section-->\\r\\n  <div class=\\\"panel\\\" *ngIf=\\\"selectedOpi\\\">\\r\\n    <div class=\\\"panel-heading background-4\\\">\\r\\n      <h4 class=\\\"panel-title \\\">\\r\\n        <a data-toggle=\\\"collapse\\\" href=\\\"#edit-section\\\">Edit Section</a>\\r\\n      </h4>\\r\\n    </div>\\r\\n    <div id=\\\"edit-section\\\" class=\\\"panel-collapse collapse in\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-6\\\">\\r\\n            <label>Strategic Goal :</label>\\r\\n            {{selectedOpi.goal}}\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6\\\">\\r\\n            <label>Initiative :</label>\\r\\n            {{selectedInitiative.initiative}}\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6\\\">\\r\\n            <label>Activity :</label>\\r\\n            {{selectedActivity.activity}}\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6\\\">\\r\\n            <label>OPI :</label>\\r\\n            {{selectedMeasure.opi}}\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6\\\">\\r\\n            <label>Frequency :</label>\\r\\n            {{selectedMeasure.frequency}}\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6\\\">\\r\\n            <label>Measure Unit :</label>\\r\\n            {{selectedMeasure.measureUnit}}\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6\\\">\\r\\n            <label>Base Line :</label>\\r\\n            {{selectedMeasure.departmentInfo[0].baseline}}\\r\\n          </div>\\r\\n          <div class=\\\"col-lg-6\\\">\\r\\n            <label>Evidence Form Type :</label>\\r\\n            {{selectedMeasure.evidanceForm}}\\r\\n            <p *ngIf=\\\"!selectedMeasure.evidanceForm\\\">None</p>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <table id=\\\"accordion\\\" class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Year</th>\\r\\n                <th>Estimated Cost</th>\\r\\n                <th>Quarter</th>\\r\\n                <th>Estimated Target Level</th>\\r\\n                <th>Current Cost</th>\\r\\n                <th>Current Target Level</th>\\r\\n                <th>End Date</th>\\r\\n                <th>Status</th>\\r\\n                <th></th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let tdl of selectedMeasure.departmentInfo[0].opiAnnualTargets;let at=index;\\\">\\r\\n              <tr>\\r\\n                <td [attr.rowspan]=\\\"tdl.levels.length + 3\\\" style=\\\"vertical-align: middle;\\\">{{tdl.year}}</td>\\r\\n                <td [attr.rowspan]=\\\"tdl.levels.length + 3\\\" style=\\\"vertical-align: middle;\\\">{{tdl.estimatedCost}}</td>\\r\\n              </tr>\\r\\n              <ng-template let-lev ngFor [ngForOf]=\\\"tdl.levels\\\" let-in=\\\"index\\\">\\r\\n                <tr>\\r\\n                  <td>{{lev.quarter}}</td>\\r\\n                  <td>{{lev.estimatedTargetLevel}}</td>\\r\\n                  <td>{{lev.currentCost}}</td>\\r\\n                  <td>{{lev.currentTargetLevel}}</td>\\r\\n                  <td>{{lev.endDate + tdl.year}}</td>\\r\\n                  <td style=\\\"text-transform: capitalize;\\\">{{lev.status}}</td>\\r\\n                  <td>\\r\\n                    <button class=\\\"btn-link\\\" data-toggle=\\\"modal\\\" data-target=\\\"#feedbackModal\\\" (click)=\\\"selectedLevel = lev;\\\"> Approve/Reject</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"lev.evidance&&lev.evidance.length\\\">\\r\\n                  <td colspan=\\\"6\\\">\\r\\n                    <b>Evidences</b>\\r\\n                    <br>\\r\\n                    <div class=\\\"row\\\" *ngFor=\\\"let ev of lev.evidance;let e = index;\\\">\\r\\n                      <div class=\\\"col-lg-6\\\">\\r\\n                        <a [attr.href]=\\\"ev.url\\\">{{e+1}}) evidance {{e+1}}</a>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"lev.internshipGraph&&lev.internshipGraph.length\\\" >\\r\\n                  <td></td>\\r\\n                  <td colspan=\\\"5\\\">\\r\\n                    <table class=\\\"table table-bordered\\\">\\r\\n                      <caption>\\r\\n                        <b>Internship Details</b>\\r\\n                      </caption>\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <th>Organization</th>\\r\\n                          <th>Supervisor</th>\\r\\n                          <th>Total</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody>\\r\\n                        <tr *ngFor=\\\"let data of lev.internshipGraph;let z = index;\\\">\\r\\n                          <td>{{data.organization}}</td>\\r\\n                          <td>{{data.internalSupervisior}}</td>\\r\\n                          <td>{{data.count}}</td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"lev.mouDetails&&lev.mouDetails.length\\\">\\r\\n                  <td></td>\\r\\n                  <td colspan=\\\"5\\\">\\r\\n                    <table class=\\\"table table-bordered\\\">\\r\\n                      <caption><b>Mous Detail</b></caption>\\r\\n                      <thead>\\r\\n                        <tr>\\r\\n                          <th>Mou Type</th>\\r\\n                          <th>Organisation</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody *ngFor=\\\"let detail of lev.mouDetails;let d = index;\\\">\\r\\n                        <tr>\\r\\n                          <td>{{detail.mouType}}</td>\\r\\n                          <td>{{detail.organization}}</td>\\r\\n                        </tr>\\r\\n                        <tr *ngIf=\\\"detail.evidance.length\\\">\\r\\n                          <td colspan=\\\"2\\\">\\r\\n                            <b>Evidences</b>\\r\\n                            <br>\\r\\n                            <div class=\\\"row\\\" *ngFor=\\\"let ev of detail.evidance;let e = index;\\\">\\r\\n                              <div class=\\\"col-lg-6\\\">\\r\\n                                <a [attr.href]=\\\"ev.url\\\">{{e+1}}) evidance {{e+1}}</a>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                      </tbody>\\r\\n                    </table>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </ng-template>\\r\\n            </tbody>\\r\\n          </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"panel\\\">\\r\\n    <div class=\\\"panel-heading  background-4\\\">\\r\\n      <h4 class=\\\"panel-title\\\">\\r\\n        <a>Assigned Operational Indicator</a>\\r\\n      </h4>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <table class=\\\"table table-bordered\\\">\\r\\n        <colgroup>\\r\\n          <col style=\\\"width:20%\\\">\\r\\n          <col style=\\\"width:20%\\\">\\r\\n          <col style=\\\"width:20%\\\">\\r\\n          <col style=\\\"width:20%\\\">\\r\\n          <col style=\\\"width:10%\\\">\\r\\n          <col style=\\\"width:6.5%\\\">\\r\\n          <col style=\\\"width:3.5%\\\">\\r\\n        </colgroup>\\r\\n        <thead class=\\\"header-background\\\" *ngIf=\\\"goals.length\\\">\\r\\n          <tr>\\r\\n            <th>Goal\\r\\n              <span class=\\\"search\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"search\\\" (keyup)=\\\"searchGoal($event)\\\" placeholder=\\\"Search..\\\">\\r\\n              </span>\\r\\n            </th>\\r\\n            <th>Initiative\\r\\n              <span class=\\\"search\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"search\\\" (keyup)=\\\"searchInitiative($event)\\\" placeholder=\\\"Search..\\\">\\r\\n              </span>\\r\\n            </th>\\r\\n            <th>Activity\\r\\n              <span class=\\\"search\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"search\\\" (keyup)=\\\"searchActivity($event)\\\" placeholder=\\\"Search..\\\">\\r\\n              </span>\\r\\n            </th>\\r\\n            <th>KPI\\r\\n              <span class=\\\"search\\\">\\r\\n                <input type=\\\"text\\\" name=\\\"search\\\" (keyup)=\\\"searchOpi($event)\\\" placeholder=\\\"Search..\\\">\\r\\n              </span>\\r\\n            </th>\\r\\n            <th>Frequency</th>\\r\\n            <th>Status</th>\\r\\n            <th></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let goal of goals;let i = index;\\\">\\r\\n            <td>{{goal.goal}}</td>\\r\\n            <td colspan=\\\"6\\\" style=\\\"padding:0px;border:none;\\\" #element [style.height]=\\\"get(element)\\\">\\r\\n              <table class=\\\"table table-bordered\\\" style=\\\"height: inherit;\\\">\\r\\n                <colgroup>\\r\\n                  <col style=\\\"width:25%\\\">\\r\\n                  <col style=\\\"width:75%\\\">\\r\\n                </colgroup>\\r\\n                <tr *ngFor=\\\"let initiate of goal.initiatives;let j=index;\\\">\\r\\n                  <td>{{initiate.initiative}}</td>\\r\\n                  <td colspan=\\\"4\\\" style=\\\"padding:0px;\\\" #element1 [style.height]=\\\"get(element1)\\\">\\r\\n                    <table class=\\\"table table-bordered\\\" style=\\\"height: inherit;\\\">\\r\\n                      <colgroup>\\r\\n                        <col style=\\\"width:33.33%\\\">\\r\\n                        <col style=\\\"width:66.67\\\">\\r\\n                      </colgroup>\\r\\n                      <tr *ngFor=\\\"let activit of initiate.activities;let k=index;\\\">\\r\\n                        <td [style.border-top]=\\\"k?'1px solid #ddd':'none'\\\">{{activit.activity}}</td>\\r\\n                        <td colspan=\\\"4\\\" style=\\\"padding:0px;\\\" #element2 [style.height]=\\\"get(element2) + ' !important'\\\">\\r\\n                          <table class=\\\"table table-bordered\\\" style=\\\"height: inherit;\\\">\\r\\n                            <colgroup>\\r\\n                              <col style=\\\"width:50.5%\\\">\\r\\n                              <col style=\\\"width:25%\\\">\\r\\n                              <col >\\r\\n                              <col >\\r\\n                            </colgroup>\\r\\n                            <tr *ngFor=\\\"let msr of activit.opis;let l=index\\\">\\r\\n                              <td [style.border-top]=\\\"l?'1px solid #ddd':'none'\\\">{{msr.opi}}</td>\\r\\n                              <td [style.border-top]=\\\"l?'1px solid #ddd':'none'\\\">{{msr.frequency}}</td>\\r\\n                              <td style=\\\"text-transform: capitalize;\\\">{{msr.departmentInfo[\\\"0\\\"].opiAnnualTargets[\\\"0\\\"].levels[\\\"0\\\"].status}}</td>\\r\\n                              <td [style.border-top]=\\\"l?'1px solid #ddd':'none'\\\">\\r\\n                                <a style=\\\"cursor:pointer;\\\" data-target=\\\"#edit-section\\\" (click)=\\\"selectedOpi=goal;selectedInitiative=initiate;selectedActivity=activit;selectedMeasure=msr;showOpi(goal,msr)\\\">view</a>\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                          </table>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                    </table>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot *ngIf=\\\"!goals.length\\\">\\r\\n          <tr>\\r\\n            <td colspan=\\\"4\\\" class=\\\"text-center\\\">No Data to Display .,.</td>\\r\\n          </tr>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n  <!-- Modal -->\\r\\n  <div class=\\\"modal fade\\\" id=\\\"feedbackModal\\\" role=\\\"dialog\\\">\\r\\n      <div class=\\\"modal-dialog\\\">\\r\\n      \\r\\n        <!-- Modal content-->\\r\\n        <div class=\\\"modal-content\\\" *ngIf=\\\"selectedLevel\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n            <h4 class=\\\"modal-title\\\">{{selectedMeasure.opi}}</h4>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"optradio\\\">Feedback :</label>\\r\\n              <label class=\\\"radio-inline\\\">\\r\\n                <input type=\\\"radio\\\" name=\\\"optradio\\\" [(ngModel)]=\\\"selectedLevel.feedback\\\" value=\\\"true\\\">Approve\\r\\n              </label>\\r\\n              <label class=\\\"radio-inline\\\">\\r\\n                <input type=\\\"radio\\\" name=\\\"optradio\\\" [(ngModel)]=\\\"selectedLevel.feedback\\\" value=\\\"false\\\">Reject\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"comment\\\">Comment :</label>\\r\\n              <textarea class=\\\"form-control\\\" id=\\\"comment\\\" name=\\\"comment\\\" [(ngModel)]=\\\"selectedLevel.comment\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-btn-success\\\" (click)=\\\"setQuarterFeedback(selectedLevel)\\\">Submit</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n      </div>\\r\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// G:/Dashboard/update/sp-project/src/app/hod/hod.component.html\n// module id = ../../../../../src/app/hod/hod.component.html\n// module chunks = hod.module","import { Component } from '@angular/core';\r\nimport { Filters } from '../shared/filters';\r\nimport { StorageService } from '../shared/storage.service';\r\nimport { HodService } from './hod.service';\r\nimport * as alertify from 'alertifyjs';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'hod',\r\n  templateUrl: 'hod.component.html',\r\n  styleUrls: ['hod.component.css']\r\n})\r\nexport class HodComponent extends Filters {\r\n\r\n  constructor(private utServ: HodService,\r\n    private storage: StorageService) {\r\n    super();\r\n    this.getOpi();\r\n  }\r\n\r\n  getOpi(): any {\r\n    this.utServ.getOpiByDeptId(this.storage.getData('user_roleInfo')[0].departmentId).subscribe((response: any) => {\r\n      if (response.status == 204) {\r\n        this.goals = [];\r\n        this.goalsCopy = []\r\n      } else {\r\n        this.goals = response;\r\n        this.goalsCopy = response;\r\n\r\n        this.initFilters(this.goalsCopy);\r\n      }\r\n    })\r\n  }\r\n\r\n  setQuarterFeedback(data:any){\r\n    console.log(data.feedback);\r\n    if(data.feedback == 'true')\r\n      alertify.confirm(\"Do you realy want to Approve this??\",()=>{\r\n        this.utServ.approve(data.quarterId,{comment:data.comment}).subscribe((reponse)=>{\r\n          console.log(reponse);\r\n        },(error:any)=>{\r\n          console.log(error);        \r\n        });\r\n      });\r\n    else\r\n      alertify.confirm(\"Do you realy want to Reject this??\", ()=>{\r\n        this.utServ.reject(data.quarterId,{comment:data.comment}).subscribe((reponse)=>{\r\n          console.log(reponse);\r\n        },(error:any)=>{\r\n          console.log(error);        \r\n        });\r\n      })\r\n      \r\n  }\r\n\r\n\r\n\r\n  public showOpi(goal: any, measure: any) {\r\n    $('#edit-section').collapse('show');\r\n    console.log(goal);\r\n  }\r\n\r\n  get(e) {\r\n    var promise = new Promise((resolve: any, reject: any) => { $(e)[\"0\"].height = $(e)[\"0\"].clientHeight; resolve(); });\r\n    return promise;\r\n  }\r\n\r\n  logout(){\r\n    localStorage.clear();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// G:/Dashboard/update/sp-project/src/app/hod/hod.component.ts","import {NgModule} from '@angular/core';\r\nimport { HodComponent } from './hod.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HodService } from './hod.service';\r\nimport { CustomHttpService } from '../shared/default.header.service';\r\nimport { SharedModule } from '../shared/shared.module';\r\n@NgModule({\r\n imports:[SharedModule,RouterModule.forChild([\r\n  {\r\n   path:'',\r\n   component:HodComponent\r\n  }\r\n ])],\r\n exports:[],\r\n declarations:[HodComponent],\r\n providers:[CustomHttpService,HodService]\r\n})\r\nexport class HodModule{\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// G:/Dashboard/update/sp-project/src/app/hod/hod.module.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Response, Http, Headers, RequestOptions } from '@angular/http';\r\nimport { CustomHttpService } from \"../shared/default.header.service\";\r\nimport { StorageService } from \"../shared/storage.service\";\r\n\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n@Injectable()\r\nexport class HodService{\r\n baseUrl: string;\r\n constructor(public http: CustomHttpService,private htttp:Http,\r\n  public con: StorageService){\r\n   this.baseUrl = con.baseUrl + con.getData('user_roleInfo')[0].role;\r\n }\r\n\r\n getOpiByDeptId(deptId){\r\n  return this.http.get(this.baseUrl + \"/department/\"+deptId+\"/result\")\r\n    .map(this.extractData)\r\n    .catch(this.handleError);\r\n }\r\n\r\n approve(levelId,data){\r\n  return this.http.put(this.baseUrl + \"/quarter/\"+levelId+\"/approve\",data)\r\n  .map(this.extractData)\r\n  .catch(this.handleError);\r\n }\r\n\r\n reject(levelId,data){\r\n  return this.http.put(this.baseUrl + \"/quarter/\"+levelId+\"/reject\",data)\r\n  .map(this.extractData)\r\n  .catch(this.handleError);\r\n }\r\n\r\n\r\n private extractData(res: Response) {\r\n  if (res.status === 204) { return res; }\r\n  let body = res.json();\r\n  return body || {};\r\n}\r\n\r\n\r\nprivate handleError(error: Response | any) {\r\n  let errMsg: string;\r\n  if (error instanceof Response) {\r\n    const body = error.json() || '';\r\n    const err = body.error || JSON.stringify(body);\r\n    errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    if (error.status === 0) {\r\n      errMsg = `${error.status} - \"Something is wrong..\"`;\r\n    }\r\n  } else {\r\n    errMsg = error.message ? error.message : error.toString();\r\n  }\r\n  return Observable.throw(errMsg);\r\n}\r\n}\n\n\n// WEBPACK FOOTER //\n// G:/Dashboard/update/sp-project/src/app/hod/hod.service.ts"],"sourceRoot":"webpack:///"}